openapi: 3.0.0
info:
  title: Muslim Matrimony Admin Service API
  version: 1.0.0
  description: API endpoints for admin user management and analytics

servers:
  - url: http://localhost:8081
    description: Local development server

paths:
  /users:
    get:
      tags: [User Management]
      summary: List all users
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema: 
            type: integer
            default: 1
        - name: limit
          in: query
          schema: 
            type: integer
            default: 20
        - name: blocked
          in: query
          schema: 
            type: boolean
      responses:
        '200':
          description: List of users
          content:
            application/json:
              example:
                users:
                  - user_id: "123"
                    email: "user@example.com"
                    phone: "+911234567890"
                    blocked: false
                    subscription_active: true
                total: 150
                page: 1
                limit: 20

  /users/{user_id}:
    get:
      tags: [User Management]
      summary: Get user details
      security:
        - BearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              example:
                user_id: "123"
                email: "user@example.com"
                phone: "+911234567890"
                created_at: "2023-01-15T10:00:00Z"
                last_login: "2023-07-20T15:30:00Z"
                blocked: false
                subscription:
                  active: true
                  valid_until: "2024-07-20"
                profile_completeness: 85%

    patch:
      tags: [User Management]
      summary: Block/Unblock user
      security:
        - BearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema: 
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: [block, unblock]
              required: [action]
              example:
                action: block
      responses:
        '200':
          description: User status updated

  /users/search:
    get:
      tags: [User Management]
      summary: Search users
      security:
        - BearerAuth: []
      parameters:
        - name: query
          in: query
          required: true
          schema: 
            type: string
        - name: field
          in: query
          schema: 
            type: string
            enum: [email, phone, name]
      responses:
        '200':
          description: Search results
          content:
            application/json:
              example:
                - user_id: "123"
                  email: "user@example.com"
                  name: "John Doe"
                  phone: "+911234567890"

  /analytics/users:
    get:
      tags: [Analytics]
      summary: User statistics
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User analytics
          content:
            application/json:
              example:
                total_users: 1500
                active_trials: 300
                subscribed_users: 1200
                blocked_users: 15
                avg_profile_completeness: 78
                new_users_last_7_days: 45

  /analytics/revenue:
    get:
      tags: [Analytics]
      summary: Revenue statistics
      security:
        - BearerAuth: []
      parameters:
        - name: period
          in: query
          schema: 
            type: string
            enum: [daily, weekly, monthly]
            default: monthly
      responses:
        '200':
          description: Revenue data
          content:
            application/json:
              example:
                total_revenue: 1200000
                currency: "INR"
                monthly_breakdown:
                  - month: "2023-06"
                    amount: 400000
                  - month: "2023-07"
                    amount: 800000

  /analytics/activity:
    get:
      tags: [Analytics]
      summary: User activity
      security:
        - BearerAuth: []
      parameters:
        - name: metric
          in: query
          required: true
          schema: 
            type: string
            enum: [logins, profile_edits, searches, interests]
        - name: days
          in: query
          schema: 
            type: integer
            default: 7
      responses:
        '200':
          description: Activity data
          content:
            application/json:
              example:
                metric: "logins"
                days: 7
                data:
                  - date: "2023-07-15"
                    count: 150
                  - date: "2023-07-16"
                    count: 175

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT